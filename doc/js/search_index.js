var search_data = {"index":{"searchIndex":["buildapp","errorstep","object","pushapp","runshell","startapp","startappx","stopapp","stopappx","wfe","basestep","engine","errorstate","exception","lock","lockmigration","steperror","steps","colabdummy","dummy","error","runonremotehosts","workflow","workflowhalted","workflowlocked","workflowmia","workflowmigration","workflowstep","workflowstepmigration","workflowengine","colabdummy","dummy","dummystdout","[]()","[]=()","_work()","acquire?()","create()","create()","create()","create_workflow()","log()","log_exception()","new()","new()","parse_options()","puts()","release()","run()","run()","stopped_servers()","work()","work()","work()","work()","work()","work()","work()","work()","work()","work()","work()","work()","work()","work()","work()","work()","build","gemfile","readme","rakefile"],"longSearchIndex":["buildapp","errorstep","object","pushapp","runshell","startapp","startappx","stopapp","stopappx","wfe","wfe::basestep","wfe::engine","wfe::errorstate","wfe::exception","wfe::lock","wfe::lockmigration","wfe::steperror","wfe::steps","wfe::steps::colabdummy","wfe::steps::dummy","wfe::steps::error","wfe::steps::runonremotehosts","wfe::workflow","wfe::workflowhalted","wfe::workflowlocked","wfe::workflowmia","wfe::workflowmigration","wfe::workflowstep","wfe::workflowstepmigration","workflowengine","workflowengine::colabdummy","workflowengine::dummy","workflowengine::dummystdout","wfe::engine#[]()","wfe::engine#[]=()","wfe::basestep#_work()","wfe::lock::acquire?()","wfe::lockmigration#create()","wfe::workflowmigration#create()","wfe::workflowstepmigration#create()","wfe::engine#create_workflow()","wfe::engine#log()","wfe::engine#log_exception()","wfe::basestep::new()","wfe::engine::new()","wfe::basestep#parse_options()","wfe::basestep#puts()","wfe::lock::release()","wfe::engine#run()","wfe::workflowstep#run()","stopappx#stopped_servers()","buildapp#work()","errorstep#work()","pushapp#work()","runshell#work()","startapp#work()","startappx#work()","stopapp#work()","stopappx#work()","wfe::basestep#work()","wfe::steps::colabdummy#work()","wfe::steps::dummy#work()","wfe::steps::error#work()","wfe::steps::runonremotehosts#work()","workflowengine::colabdummy#work()","workflowengine::dummy#work()","workflowengine::dummystdout#work()","","","",""],"info":[["BuildApp","","BuildApp.html","",""],["ErrorStep","","ErrorStep.html","",""],["Object","","Object.html","",""],["PushApp","","PushApp.html","",""],["RunShell","","RunShell.html","","<p>execute a shell command, raises an exception (halting the workflow) on\nfailure\n"],["StartApp","","StartApp.html","",""],["StartAppX","","StartAppX.html","","<p>restart the servers that were stopped\n"],["StopApp","","StopApp.html","",""],["StopAppX","","StopAppX.html","","<p>stops a fictious app, gathers stopped servers\n"],["Wfe","","Wfe.html","",""],["Wfe::BaseStep","","Wfe/BaseStep.html","","<p>Abstract Base Step of a Workflow\n<p>Author &mdash; jacques@marketo.com\n<p>Copyright &mdash; Copyright © marketo inc.\n"],["Wfe::Engine","","Wfe/Engine.html","","<p>Engine abstract the creation and storage of Workflow and WorkflowStep(s).\n<p>Author &mdash; jacques@marketo.com\n\n"],["Wfe::ErrorState","","Wfe/ErrorState.html","","<p>Raised when the workflow is in error state (one of its step is not pending\nor completed)\n"],["Wfe::Exception","","Wfe/Exception.html","","<p>generic exception\n"],["Wfe::Lock","","Wfe/Lock.html","","<p>Active Record Semaphore\n<p>Author &mdash; jacques@marketo.com\n<p>Copyright &mdash; Copyright © marketo inc.\n"],["Wfe::LockMigration","","Wfe/LockMigration.html","",""],["Wfe::StepError","","Wfe/StepError.html","",""],["Wfe::Steps","","Wfe/Steps.html","",""],["Wfe::Steps::ColabDummy","","Wfe/Steps/ColabDummy.html","","<p>dummy class use in test and examples\n"],["Wfe::Steps::Dummy","","Wfe/Steps/Dummy.html","","<p>dummy step use in test and examples\n"],["Wfe::Steps::Error","","Wfe/Steps/Error.html","","<p>runs a command via ssh on a set of hostnames\n"],["Wfe::Steps::RunOnRemoteHosts","","Wfe/Steps/RunOnRemoteHosts.html","","<p>runs a command via ssh on a set of hostnames\n"],["Wfe::Workflow","","Wfe/Workflow.html","","<p>Workflow extends ActiveRecord::Base and is used to define and store\nworkflow\n<p>Author &mdash; jacques@marketo.com …\n\n"],["Wfe::WorkflowHalted","","Wfe/WorkflowHalted.html","",""],["Wfe::WorkflowLocked","","Wfe/WorkflowLocked.html","",""],["Wfe::WorkflowMIA","","Wfe/WorkflowMIA.html","",""],["Wfe::WorkflowMigration","","Wfe/WorkflowMigration.html","",""],["Wfe::WorkflowStep","","Wfe/WorkflowStep.html","","<p>WorkflowStep extends ActiveRecord::Base and is used to define and store a\nworkflow’s steps\n<p>Author &mdash; jacques@ …\n\n"],["Wfe::WorkflowStepMigration","","Wfe/WorkflowStepMigration.html","",""],["WorkflowEngine","","WorkflowEngine.html","","<p>FactoryGirl.find_definitions wf = FactoryGirl.create(:workflow) puts\nwf.inspect exit 1 config.include …\n"],["WorkflowEngine::ColabDummy","","WorkflowEngine/ColabDummy.html","",""],["WorkflowEngine::Dummy","","WorkflowEngine/Dummy.html","",""],["WorkflowEngine::DummySTDOUT","","WorkflowEngine/DummySTDOUT.html","",""],["[]","Wfe::Engine","Wfe/Engine.html#method-i-5B-5D","(key)","<p>returns workflow context variables (workitems in Ruote) this should not be\naccessed outside of the instance …\n"],["[]=","Wfe::Engine","Wfe/Engine.html#method-i-5B-5D-3D","(key,value)","<p>sets workflow context variables (workitems in Ruote)\n"],["_work","Wfe::BaseStep","Wfe/BaseStep.html#method-i-_work","(context)","<p>this is called by WorkflowStep here you could add pre and post step hooks\n"],["acquire?","Wfe::Lock","Wfe/Lock.html#method-c-acquire-3F","(name, lock_duration = 500)","<p>Requests a lock on semaphore ‘name’\n<p>Returns true on success, false on failure.\n"],["create","Wfe::LockMigration","Wfe/LockMigration.html#method-i-create","()",""],["create","Wfe::WorkflowMigration","Wfe/WorkflowMigration.html#method-i-create","()",""],["create","Wfe::WorkflowStepMigration","Wfe/WorkflowStepMigration.html#method-i-create","()",""],["create_workflow","Wfe::Engine","Wfe/Engine.html#method-i-create_workflow","(wf_name, init_time_ctx, step_classes)","<p>saves workflow and steps and context to db. The argument ‘name’ must be\nunique, as the work flow engines …\n"],["log","Wfe::Engine","Wfe/Engine.html#method-i-log","(msg,level = Logger::DEBUG)","<p>encapsulate call to logger, for cases when logger is not set (nil) DRY\n"],["log_exception","Wfe::Engine","Wfe/Engine.html#method-i-log_exception","(msg, e)","<p>helper function to format and log exceptions, DRY\n"],["new","Wfe::BaseStep","Wfe/BaseStep.html#method-c-new","(step_instance_opts, args = [])",""],["new","Wfe::Engine","Wfe/Engine.html#method-c-new","(db_conf, opts = {})",""],["parse_options","Wfe::BaseStep","Wfe/BaseStep.html#method-i-parse_options","(opts)",""],["puts","Wfe::BaseStep","Wfe/BaseStep.html#method-i-puts","(obj)","<p>override puts io method\n"],["release","Wfe::Lock","Wfe/Lock.html#method-c-release","(name)","<p>Release lock on semaphore ‘name’ Returns true on success, false on failure.\n"],["run","Wfe::Engine","Wfe/Engine.html#method-i-run","(wf_name)","<p>THe argument ‘wf_name’ should be matching the name of a workflow that was\npreviously saves to the DB …\n"],["run","Wfe::WorkflowStep","Wfe/WorkflowStep.html#method-i-run","(runtime_ctx, step_instance_opts)","<p>a Wfe::WorkflowStep has an attribute called ‘impl_class’ which indicates\nwhich class implements the steps. …\n"],["stopped_servers","StopAppX","StopAppX.html#method-i-stopped_servers","(server)",""],["work","BuildApp","BuildApp.html#method-i-work","(ctx)",""],["work","ErrorStep","ErrorStep.html#method-i-work","(ctx)",""],["work","PushApp","PushApp.html#method-i-work","(ctx)",""],["work","RunShell","RunShell.html#method-i-work","(ctx)",""],["work","StartApp","StartApp.html#method-i-work","(ctx)",""],["work","StartAppX","StartAppX.html#method-i-work","(ctx)",""],["work","StopApp","StopApp.html#method-i-work","(ctx)",""],["work","StopAppX","StopAppX.html#method-i-work","(ctx)",""],["work","Wfe::BaseStep","Wfe/BaseStep.html#method-i-work","(context)","<p>will be called by the workflow engine context is a hash like object\ncontaining the workflow run time …\n"],["work","Wfe::Steps::ColabDummy","Wfe/Steps/ColabDummy.html#method-i-work","(ctx)",""],["work","Wfe::Steps::Dummy","Wfe/Steps/Dummy.html#method-i-work","(ctx)",""],["work","Wfe::Steps::Error","Wfe/Steps/Error.html#method-i-work","(ctx)",""],["work","Wfe::Steps::RunOnRemoteHosts","Wfe/Steps/RunOnRemoteHosts.html#method-i-work","(ctx)",""],["work","WorkflowEngine::ColabDummy","WorkflowEngine/ColabDummy.html#method-i-work","(ctx)",""],["work","WorkflowEngine::Dummy","WorkflowEngine/Dummy.html#method-i-work","(ctx)",""],["work","WorkflowEngine::DummySTDOUT","WorkflowEngine/DummySTDOUT.html#method-i-work","(ctx)",""],["BUILD","","BUILD.html","","<p>#personal notes rdoc –main rdoc/rdoc.rb gem build wfe.gemspec  gem install\n./wfe-0.0.0.gem # edit conf/db_conf …\n"],["Gemfile","","Gemfile.html","","<p>source ‘rubygems.org’\n<p>gemspec\n"],["README","","README_rdoc.html","","<p>WFE - Persisted Workflow Engine\n<p>Features\n<p>Sequential step by step execution\n"],["Rakefile","","Rakefile.html","","<p>require “bundler/gem_tasks” #require File.join(File.dirname(__FILE__),\n‘lib/wfe.rb’) $: &lt;&lt; …\n"]]}}